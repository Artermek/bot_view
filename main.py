import asyncio
import redis
import os
import json
import uuid
import base64
from fastapi import FastAPI, HTTPException, UploadFile, File
from fastapi.responses import JSONResponse
from fastapi.middleware.cors import CORSMiddleware
from pydantic import BaseModel
from typing import Dict, List, Optional
from openai import AsyncOpenAI

from fastapi.responses import FileResponse
from reportlab.lib.pagesizes import letter
from reportlab.pdfgen import canvas

from reportlab.platypus import SimpleDocTemplate, Paragraph, Spacer, PageBreak
from reportlab.lib.styles import getSampleStyleSheet, ParagraphStyle
from reportlab.lib.pagesizes import letter
from reportlab.pdfbase import pdfmetrics
from reportlab.pdfbase.ttfonts import TTFont
import markdown2
from bs4 import BeautifulSoup

pdfmetrics.registerFont(TTFont('DejaVuSans', 'DejaVuSans.ttf'))

app = FastAPI()

# Настройка CORS
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# Подключение к Redis
redis_client = redis.Redis.from_url(os.environ.get("REDISCLOUD_URL"), decode_responses=True)

class SurveyData(BaseModel):
    childName: str
    childDOB: str
    childGender: str
    parentName: str
    q1_1: str
    q1_2: str
    q1_3: str
    q1_4: str
    q1_5: str
    q1_6: str
    q1_7: str
    q1_8: str
    q1_9: str
    q1_10: str
    q2_1: str
    q2_2: str
    q2_3: str
    q2_4: str
    q2_5: str
    q2_6: str
    q2_7: str
    q2_8: str
    q2_9: str
    q2_10: str
    q3_1: str
    q3_2: str
    q3_3: str
    q3_4: str
    q3_5: str
    q3_6: str
    q3_7: str
    q3_8: str
    q3_9: str
    q3_10: str
    q4_1: str
    q4_2: str
    q4_3: str
    q4_4: str
    q4_5: str
    q4_6: str
    q4_7: str
    q4_8: str
    q4_9: str
    q4_10: str
    emotionalState: str
    developmentFeatures: Optional[str] = None
    strengths: Optional[str] = None
    attentionAreas: Optional[str] = None
    specialists: Optional[str] = None

class AnalysisRequest(BaseModel):
    survey: SurveyData
    task_id: str
    
    
    # Стили
styles = getSampleStyleSheet()
styles.add(ParagraphStyle(
    name='MarkdownBody',
    parent=styles['BodyText'],
    fontName='DejaVuSans',
    fontSize=10,
    leading=14,
    spaceAfter=6,
))
styles.add(ParagraphStyle(
    name='MarkdownHeading2',
    parent=styles['Heading2'],
    fontName='DejaVuSans',
    fontSize=12,
    leading=14,
    spaceAfter=6,
))


# Промпт для категории «Дом, Дерево, Человек»
PROMPT_HOUSE_TREE_PERSON = """Перед тобой — скан или фотография рисунка на тему «Дом, дерево, человек». Твоя задача провести анализ в два этапа:
сначала измерить и зафиксировать ключевые визуальные параметры, затем отнести каждое значение к одному из критериев.
В ответе укажи только результаты с Этапа 2. 


Этап 1. Извлечение признаков
Для каждого пункта замерь или оценить приблизительно в миллиметрах (или в процентах от объекта/листа):
— Общий размер рисунка (процент заполнения листа)
— Толщину линий (средняя ширина штриха в мм)
— Положение объектов (координаты центра относительно листа или «слева/в центре/справа»)
— Для дома: ширина и высота корпуса, размеры крыши, размеры двери и окон, наличие фундамента (линия земли)
— Для дерева: высота ствола, длина корней, размеры кроны
— Для человека: рост, ширина плеч, длина рук, длина ног, размер головы

Этап 2. КЛАССИФИКАЦИЯ ПО КРИТЕРИЯМ
Используя измеренные величины, для каждого пункта выбери ровно один критерий, укажи его название, условие выбора (пороговые величины) и на что этот критерий может указывать эмоционально. Приведи краткое обоснование цифрами.

Общие характеристики и организация рисунка:

Размер рисунка:
Большой размер (рисунок занимает >65 % листа). Может указывать на экстраверсию, уверенность в себе, экспансивность, иногда – на потребность в признании или компенсирующую гигантоманию.
Маленький размер (рисунок занимает <65 % листа). Может указывать на интроверсию, неуверенность, застенчивость, чувство неполноценности, подавленность.

Расположение на листе:
В центре (центр масс всех объектов находится в пределах 40–60 % по ширине и 40–60 % по высоте). Адаптивность, уравновешенность, потребность в признании.
Сверху (центр масс по вертикали ≥70 %). Фантазии, идеализм, оторванность от реальности.
Снизу (центр масс по вертикали ≤30 %). Неуверенность, потребность в опоре.
Слева (центр масс по горизонтали ≤30 %). Ориентация на прошлое, зависимость от матери, интроверсия.
Справа (центр масс по горизонтали ≥70 %). Ориентация на будущее, экстраверсия, потребность в общении, зависимость от отца.

Сила нажима:
Сильный нажим (средняя ширина штриха >1 мм). Энергичность, импульсивность, настойчивость, иногда – агрессивность.
Слабый нажим (штрих <1 мм). Чувствительность, мягкость, уступчивость, астения, тревожность.

Характер линий:
Четкие, ровные линии (непрерывные штрихи ≥15 мм, ≤2 разрыва на 20 мм, варьирование толщины <20 %). Контроль, рациональность, уверенность.
Прерывистые, неровные линии (сегмент ≤10 мм, ≥5 разрывов на 20 мм, ≥5 резких изломов >30°). Тревожность, неуверенность, импульсивность.
Заштрихованные, затемнённые линии (хетчинг ≥5 линий на 10 мм, штриховка ≥20 % контура). Тревожность, чувство вины, подавленные эмоции.

Общая композиция:
Сбалансированная (каждый из 4 квадрантов листа содержит 15–35 % рисунка, центр масс смещён ≤10 %). Уравновешенность, адаптивность.
Перегруженная, хаотичная (один квадрант ≥50 %, смещение центра ≥20 %, ≥6 пересечений линий на 50 мм²). Тревожность, внутренний конфликт.
Минималистичная (рисунок ≤30 % площади листа, ≥40 % пусто, объектов ≤3). Интроверсия, подавленность, чувство одиночества.

Оценка рисунка «Дома»:

Фундамент:
Наличие фундамента (линия ≥80 % ширины дома, толщина ≥0.8 мм, без разрывов). Устойчивость, реалистичность.
Слабый, нечеткий фундамент (линия прерывиста ≥3 разрыва на 50 мм или толщина <0.5 мм). Неуверенность, потребность в опоре.
Отсутствие фундамента (нет горизонтальной линии). Отчуждённость от реальности, нестабильность.

Стены:
Крепкие стены (контур замкнут, ≤1 разрыв на 100 мм, толщина ≥0.8 мм). Сильное “Я”, уверенность.
Слабые, тонкие стены (толщина <0.5 мм, ≥3 разрыва на 50 мм). Чувствительность, уязвимость.
Заштрихованные стены (штриховка ≥5 линий на 10 мм, ≥20 % площади). Тревожность, чувство вины.

Крыша:
Большая крыша (высота ≥25 % высоты дома, свес ≥90 % ширины). Развитая фантазия, интеллектуальные интересы.
Маленькая крыша (высота ≤10 %, свес ≤70 %). Рациональность, ограниченность фантазии.
Отсутствие крыши (нет треугольных/скатных элементов). Импульсивность, недостаток контроля.

Дверь:
Большая дверь (высота ≥25 %, ширина ≥15 %, толщина ≥0.8 мм). Экстраверсия, потребность в общении.
Маленькая дверь (высота ≤15 %, ширина ≤10 %, толщина <0.8 мм). Интроверсия, замкнутость.
Закрытая дверь (контур замкнут, без щели). Недоступность, скрытность.
Дверь без ручки (нет маркировки ручки 2–5 мм). Нежелание общаться.

Окна:
Большие окна (≥20 % высоты и ширины корпуса, площадь ≥4 % фасада). Интерес к миру, наблюдательность.
Маленькие окна (≤10 %, площадь ≤1.5 %). Ограниченный интерес к миру.
Занавески (≥3 параллелей ≥5 мм, плотность ≥3 линии/окно). Желание скрыться.
Отсутствие окон (нет замкнутых контуров). Изоляция, отчужденность.

Дым из трубы:
Дым лёгкий (1–5 линий ≥10 мм, толщина <0.8 мм). Эмоциональная теплота, потребность в близости.
Интенсивный дым (≥6 линий, плотность ≥5/10 мм, штриховка ≥15 %). Тревожность, напряжение.
Отсутствие дыма (нет линий). Подавление эмоций.
Дом без трубы (нет элемента ≥5×3 мм). Оторванность от реальности, фантазии.

Оценка рисунка «Дерева»:

Корни:
Наличие корней (линии ≥5 мм, толщина ≥0.5 мм, ширина ≥20 % диаметра ствола). Устойчивость, связь с прошлым.
Подчеркнутые корни (≥3 линии ≥8 мм, толщина ≥0.8 мм, штриховка ≥5/10 мм). Тревожность, потребность в защите.
Отсутствие корней. Неуверенность, оторванность от реальности.

Ствол:
Крепкий ствол (ширина ≥15 % высоты, контур замкнут, толщина ≥0.8 мм, отклонение ≤5°). Сила “Я”, устойчивость.
Тонкий ствол (ширина <10 %, толщина <0.5 мм, ≥2 разрыва на 50 мм). Хрупкость, чувствительность.
Искривлённый ствол (≥2 изгиба ≥15°). Внутренний конфликт, трудности адаптации.
Раны/дупла (замкнутый контур ≥3×3 мм + штриховка ≥3/10 мм). Травматический опыт.

Ветви:
Поднятые вверх (≥50 % ветвей под углом +30…+90°, длина ≥15 мм). Оптимизм, стремление к достижению.
Опущенные вниз (≥50 % ветвей под углом –30…–90°, толщина <0.6 мм). Пессимизм, подавленность.
Колючие (на каждой ветви ≥3 шипа ≤5 мм). Агрессивность, защита.
Обрубленные (≥2 «среза» ≤3 мм). Чувство утраты, ограничение возможностей.

Крона:
Пышная (контур ≥25 % высоты, ширина ≥120 % ствола, ≥15 штриховых «линий», плотность ≥4/10 мм²). Развитая фантазия, творчество.
Небольшая (контур ≤10 %, ширина ≤80 %, ≤8 листьев, плотность ≤2/10 мм²). Рациональность, ограниченность фантазии.
Отсутствие кроны. Интеллектуальная пассивность.

Плоды/листья:
Есть (≥5 замкнутых контуров ≥5 мм², зона ≥10 % кроны). Плодотворность, ресурсность.
Нет. Неудовлетворённость, ощущение нехватки ресурсов.

Оценка рисунка «Человека»:

Голова:
Большая (высота ≥25 % фигуры, ширина ≥30 % плеч, толщина ≥0.7 мм). Высокая самооценка, интеллектуальные амбиции.
Средняя (15–25 %, 20–30 %, толщина 0.5–0.7 мм). Адекватность, реалистичность.
Маленькая (≤15 %, ≤20 %, толщина <0.5 мм). Низкая самооценка, интеллектуальная пассивность.

Глаза:
Подчёркнутые (контур ≥10 % высоты и ширины головы, зрачок ≥2 мм, толщина ≥0.6 мм). Интерес к миру, потребность в общении.
Закрытые (линии ≥8 мм, толщина ≤0.5 мм, без внутренней детали). Избегание контакта, скрытность.

Уши:
Большие (контур ≥20 % высоты головы, ≥10 % ширины, толщина ≥0.6 мм). Потребность во внимании, чувствительность к критике.
Отсутствуют. Отрицание внешней информации, замкнутость.

Тело (плечи/мускулы):
Широкие плечи (между краями ≥25 % высоты фигуры, ≥50 % ширины туловища). Стремление к власти, доминированию.
Узкие плечи (≤15 % высоты, ≤30 % ширины туловища). Чувство неполноценности, слабость.
Подчёркнутые мускулы (≥2 дополнительных контурных линий ≥5 мм). Стремление к силе, компенсация слабости.

Руки:
Сильные (длина ≥30 % высоты фигуры, толщина ≥0.8 мм, угол ≥20°). Активность, энергичность.
Слабые (≤20 % высоты, толщина <0.5 мм). Пассивность, зависимость.
Спрятанные (не видны или ≤5 мм). Чувство вины, неловкость.
Направленные на себя (сгиб ≥45°, кисти внутри контура). Аутоагрессия.

Ноги:
Сильные (длина ≥40 % высоты, толщина ≥0.8 мм). Устойчивость, уверенность.
Слабые (толщина <0.5 мм, ширина ≤10 %). Неуверенность, потребность в опоре.
Короткие (≤30 % высоты). Импульсивность, недостаток контроля.

Одежда:
Подробная (≥3 элементов, толщина ≥0.6 мм, детали ≥30 % площади туловища). Потребность в признании, стремление произвести впечатление.
Минимальная (1 линия, длина ≤50 % периметра, толщина <0.5 мм). Скромность, простота.
Неопрятная (≥3 разрыва на 50 мм, неравномерность >30 %). Пренебрежение социальными нормами.

Ответ для рисунка 1 дай в формате:

Рисунок 1 (Дом/Дерево/Человек).

1. Размер рисунка: Маленький размер
2. Расположение на листе: В центре
3. Сила нажима: Слабый нажим
4. Характер линий: Прерывистые, неровные линии
5. Композиция: Гармоничная, сбалансированная композиция

Дом:

1. Фундамент: Наличие фундамента
2. Стены: Крепкие стены
3. Крыша: Большая крыша
4. Дверь: Закрытая дверь
5. Окна: Большие окна
6. Труба: Дом без трубы

Дерево:

1. Корни: Наличие корней
2. Ствол: Искривленный ствол
3. Ветви: Поднятые вверх ветви
4. Крона: Отсутствие кроны
5. Плоды, листья: Отсутствие плодов, листьев

Человек:

1. Одежда: Минимальная одежда
2. Руки: Слабые руки
3. Ноги: Слабые ноги
4. Голова: Средняя голова
5. Глаза: Подчеркнутые глаза
6. Уши: Отсутствие ушей
7. Тело: Узкие плечи

""".strip()

# Промпт для категории «Несуществующее животное»
PROMPT_ANIMAL = """
Перед тобой — скан или фотография рисунка темы «Несуществующее Животное». Твоя задача провести анализ в два этапа: сначала измерить и зафиксировать ключевые 
визуальные параметры (Этап 1), затем отнести каждое значение к одному из , используя точечные признаки и пороговые величины (Этап 2). В ответе укажи только результаты Этапа 2.

Этап 1. Извлечение признаков
Для каждого пункта измерь или оцени приблизительно:
— Размер животного: процент заполнения листа по высоте (%)
— Расположение на листе: координаты центра масс фигуры в % от ширины (горизонталь) и % от высоты (вертикаль)
— Сила нажима: средняя ширина штриха контуров (мм)
— Характер линий: длина непрерывного сегмента (мм), число разрывов на 20 мм, наличие зачёркиваний или штриховки
— Общая композиция: % рисунка в каждом из четырёх квадрантов листа, смещение центра масс от геометрического центра (смещ. %)
— Детали фигуры:
• Высота головы как % от общей высоты фигуры
• Ширина головы как % от ширины туловища
• Размер глаз: диаметр/ширина как % от ширины головы, есть / нет зрачков, количество ресниц
• Рот: высота и ширина как % от ширины головы, форма (линия/дуга/открыт)
• Уши: наличие (0/1/2), высота уха как % от высоты головы
• Рога/крылья/плавники/шипы: число или длина этих элементов (шт.)
• Хвост: длина как % от общей длины тела, направление (вверх/вниз/в сторону)
— Название и подрисуночная надпись: длина названия (количество слов), стилистика букв (прямая/закорючки)

Этап 2. Классификация по базовым критериям
Используя измеренные величины, для каждого пункта выбери ровно один критерий, приведи его название, цитату описания и обоснование на основе цифр или визуальных признаков:

Размер животного:
- Большой (занимает >65 % высоты листа). Может указывать на стремление к самоутверждению, высокую самооценку, экстраверсию, иногда компенсацию чувства неполноценности.
- Средний (35–65 % высоты). Адаптированность, уравновешенность, реалистичность.
- Маленький (<35 % высоты). Неуверенность, застенчивость, интроверсия, чувство неполноценности.

Расположение на листе:
- В центре (центр масс по горизонтали и вертикали 30–70 %). Адаптивность, уравновешенность.
- Сверху (цент масс по вертикали ≥70 %). Фантазии, идеализм, оторванность от реальности.
- Снизу (≤30 % по вертикали). Неуверенность, потребность в опоре.
- Слева (≤30 % по горизонтали). Ориентация на прошлое, зависимость от матери.
- Справа (≥70 % по горизонтали). Ориентация на будущее, зависимость от отца.

Сила нажима:
- Сильный (>1 мм). Энергичность, импульсивность, агрессивность.
- Слабый (<1 мм). Чувствительность, тревожность, астения.

Характер линий:
- Чёткие, ровные (сегмент ≥15 мм, <3 разрывов на 20 мм). Контроль, уверенность, рациональность.
- Прерывистые, неровные (сегмент ≤10 мм, ≥5 разрывов на 20 мм). Тревожность, неуверенность, импульсивность.
- Заштрихованные (штриховка ≥5 линий на 10 мм). Тревожность, чувство вины, подавленные эмоции.

Общая композиция:
- Сбалансированная (каждый квадрант 15–35 %, смещение центра ≤10 %). Уравновешенность, адаптивность.
- Перегруженная (один квадрант ≥50 %, смещение ≥20 %). Тревожность, внутренний конфликт.
- Минималистичная (рисунок ≤30 % листа, ≥40 % пусто). Интроверсия, подавленность.

Голова:
- Большая (высота >25 % фигуры). Развитый интеллект, стремление к знаниям.
- Маленькая (<15 %). Интеллектуальная пассивность, неуверенность.

Глаза:
- Большие, широко открытые (>15 % ширины головы). Интерес к миру, потребность в общении, любопытство.
- Маленькие, узкие (<10 %). Ограниченный интерес, скрытность.
- Без зрачков (зрачки не обозначены). Эмоциональная отстранённость.
- С подчёркнутыми ресницами (≥3 ресницы на глаз). Демонстративность, потребность во внимании.


Рот:
- Большой, открытый (высота >10 % высоты головы). Агрессивность, потребность в выражении эмоций.
- С зубами (замкнутые контуры с треугольными элементами). Агрессивность, защита, стремление к доминированию.
- Маленький, закрытый (<10 % ширины головы). Подавление эмоций, застенчивость.
- Отсутствие рта (нет контура). Трудности в общении, подавление потребностей.

Уши:
- Большие (>15 % высоты головы). Потребность во внимании, чувствительность к критике.
- Маленькие (<10 %). Игнорирование мнения других, независимость.
- Отсутствие ушей. Отрицание внешней информации, замкнутость.

Рога/когти/зубы/шипы:
- Много (>3 элементов). Высокий уровень агрессии, потребность в защите.
- Отсутствуют (0 элементов). Беззащитность, слабость, отсутствие агрессии.

Крылья/плавники/перепонки:
- Есть крылья. Стремление к свободе, фантазиям, уход от реальности.
- Есть плавники. Адаптивность, приспособляемость.

Хвост(несколько вариантов ответа):
- Длинный (>30 % длины тела). Влияние прошлого, привязанность.
- Короткий (<15 %). Импульсивность, недостаток контроля.
- Поднятый вверх. Уверенность, оптимизм.
- Опущенный вниз. Подавленность, пессимизм.

Название:
- Простое понятное (1–2 слова). Реалистичность, адаптивность.
- Сложное, необычное (>2 слов или неологизм). Фантазия, креативность.
- Агрессивное (угрожающее лексема). Агрессивность, потребность в доминировании.
- Смешное, нелепое (комический эффект). Юмор, самоирония.

Описание:
- Описание сильного, смелого. Стремление к силе, высокая самооценка.
- Описание слабого, беззащитного. Низкая самооценка, потребность в защите.
- Описание доброго, дружелюбного. Потребность в любви и принятии.
- Описание злого, агрессивного. Подавленные эмоции, агрессия.

Среда обитания и образ жизни:
- Тёмное место. Страхи темноты, неизведанного.
- Вода/река. Адаптивность, эмоциональная гибкость.
- Взаимодействие с другими. Социальная ориентированность или замкнутость (по числу соседних фигур).

Ответ для рисунка 2 дай в формате:
Рисунок 2 (Несуществующее животное).

1. Размер животного: <критерий>
2. Расположение на листе: <критерий>
3. Сила нажима: <критерий>
4. Характер линий: <критерий>
5. Композиция: <критерий>

Детали фигуры:
1. Голова: <критерий>
2. Глаза: <критерий>
3. Рот: <критерий>
4. Уши: <критерий>
5. Рога/когти/зубы/шипы: <критерий>
6. Крылья/плавники/перепонки: <критерий>
7. Хвост: <критерий>

Название:
1. Название: <критерий>

Описание:
1. Описание: <критерий>

Среда обитания и образ жизни:
1. Среда обитания и образ жизни: <критерий>
    """.strip()

    # Промпт для категории «Автопортрет»
PROMPT_SELF_PORTRAIT = """
Перед тобой — скан или фотография рисунка на тему «Автопортрет». Твоя задача провести анализ в два этапа: сначала измерить и зафиксировать
ключевые визуальные параметры, затем отнести каждое значение к одному из критериев. 
В ответе укажи только результаты Этапа 2.
Ответ дай без маркдаун разметки, но с использованием "\n" разметки


Этап 1. Извлечение признаков
Для каждого пункта измерь или приблизительно оцени в миллиметрах или в процентах от листа/фигуры:
— Размер фигуры: процент заполнения листа по высоте.
— Расположение на листе: координаты центра масс фигуры в процентах по горизонтали и по вертикали.
— Сила нажима: средняя ширина штриха контура (мм).
— Характер линий: средняя длина непрерывного сегмента (мм), число разрывов на 20 мм, наличие штриховки.
— Общая композиция: доля рисунка в каждом из 4 квадрантов листа (%).
II. Анализ деталей фигуры:
— Голова: высота головы как % от общей высоты фигуры.
— Глаза: ширина глаза как % от ширины головы, наличие зрачков, число ресниц.
— Рот: ширина рта как % от ширины головы, форма (линия/дуга).
— Уши: наличие ушей (0, 1 или 2), высота уха как % от высоты головы.
— Плечи: ширина плеч как % от ширины туловища.
— Шея: длина шеи (мм) и толщина шеи (мм).
— Талия: ширина талии как % от ширины груди.
— Руки: длина рук как % от общей высоты фигуры.
— Ноги: длина ног как % от общей высоты фигуры.
— Одежда: доля площади одежды, занятая деталями (узоры) в %.

Этап 2. Классификация по базовым критериям
Используя измеренные величины, для каждого пункта выбери ровно один критерий из базового списка, укажи его название, описание того, на что он может 
указывать, и краткое обоснование на основе цифр.

Размер фигуры:
- Большой размер (рисунок занимает >65 % высоты листа). Может указывать на высокую самооценку, уверенность в себе, стремление к демонстрации, потребность во внимании. Иногда – компенсация чувства неполноценности.
- Средний размер (рисунок занимает 35–65 % высоты листа). Адаптированность, реалистичность, адекватная самооценка.
- Маленький размер (рисунок занимает <35 % высоты листа). Неуверенность, застенчивость, низкая самооценка, чувство неполноценности.

Расположение на листе:
- В центре (центр масс горизонтали и вертикали 30–70 %). Уверенность, потребность в признании, адекватная самооценка.
- Сверху (центр масс по вертикали ≥70 %). Идеализм, высокие амбиции, оторванность от реальности. Может указывать на завышенную самооценку.
- Снизу (центр масс по вертикали ≤30 %). Неуверенность, потребность в опоре, зависимость от других. Может указывать на заниженную самооценку.
- Слева (центр масс по горизонтали ≤30 %). Интроверсия, ориентация на прошлое, зависимость от матери. Может указывать на рефлексию и самоанализ.
- Справа (центр масс по горизонтали ≥70 %). Экстраверсия, ориентация на будущее, потребность в общении. Может указывать на стремление к новым впечатлениям и контактам.

Сила нажима:
- Сильный (ширина штриха >1 мм). Энергичность, импульсивность, уверенность.
- Слабый (ширина штриха <1 мм). Чувствительность, тревожность, астения, неуверенность.

Характер линий:
- Чёткие, ровные (длина сегмента ≥15 мм, <3 разрывов на 20 мм, вариация толщины <20 %). Контроль, уверенность, рациональность.
- Прерывистые, неровные (длина сегмента ≤10 мм, ≥5 разрывов на 20 мм, ≥5 резких изломов >30° на 20 мм). Тревожность, неуверенность, импульсивность.
- Заштрихованные (плотность штриховки ≥5 линий на 10 мм, штриховка занимает ≥20 % длины контура). Тревожность, чувство вины, подавленные эмоции, ощущение дискомфорта.

Общая композиция:
- Сбалансированная (каждый квадрант содержит 15–35 % рисунка, центр масс смещён ≤10 %). Гармоничное восприятие себя, уравновешенность.
- Перегруженная (один квадрант ≥50 %, центр масс смещён ≥20 %, ≥6 точек пересечения на 50 мм²). Тревожность, внутренний конфликт, переизбыток эмоций.
- Минималистичная (рисунок занимает ≤30 % площади листа, ≥40 % листа пусто, объектов ≤3). Интроверсия, подавленность, чувство одиночества, недостаток энергии.

Голова:
- Большая голова (высота головы >25 % от высоты фигуры). Высокая самооценка в интеллектуальной сфере, стремление к знаниям, развитое самосознание. Может указывать на интеллектуальные амбиции.
- Маленькая голова (высота головы <15 % от высоты фигуры). Низкая самооценка в интеллектуальной сфере, интеллектуальная пассивность, неуверенность в своих способностях.

Глаза:
- Большие, широко открытые (ширина глаза >15 % ширины головы). Интерес к окружающему миру, потребность в общении, открытость, любопытство.
- Маленькие, узкие (ширина глаза <10 % ширины головы). Скрытность, осторожность, ограниченный интерес к окружающему миру.
- Глаза без зрачков (зрачки не обозначены). Эмоциональная отстранённость, избегание контакта.
- Подчёркнутые ресницы (ресниц ≥3 на глаз). Демонстративность, потребность во внимании, кокетство.

Рот:
- Улыбка (дугообразный контур, уголки рта выше средней линии). Позитивное отношение к себе, хорошее настроение, дружелюбие.
- Прямая линия (контур ровный без дуги). Контроль, сдержанность, подавление эмоций.
- Опущенные уголки рта (уголки ниже средней линии). Пессимизм, подавленность, грусть.
- Большой, открытый рот (высота рта >10 % высоты головы, отдельные штрихи). Агрессивность, потребность в выражении эмоций (в зависимости от контекста может быть просто разговорчивость).

Уши:
- Большие уши (высота уха >15 % высоты головы). Потребность во внимании, повышенная чувствительность к критике.
- Маленькие уши (высота уха <10 % высоты головы). Игнорирование мнения других, независимость.
- Отсутствие ушей (уши не нарисованы). Отрицание внешней информации, замкнутость.

Плечи:
- Широкие плечи (ширина плеч ≥100 % ширины головы). (Для мальчиков) Стремление к силе, доминированию, уверенность в себе.
- Узкие плечи (ширина плеч <80 % ширины головы). Чувство неполноценности, слабость, неуверенность.

Шея:
- Тонкая шея (толщина шеи <5 % ширины туловища). Чувствительность, уязвимость, хрупкость.
- Короткая шея (длина шеи <5 % высоты фигуры). Упрямство, ригидность, недостаток гибкости.

Талия:
- Подчёркнутая талия (ширина талии <80 % ширины плеч). (Для девочек) Интерес к  своей внешности, стремление к привлекательности.

Руки:
- Длинные, сильные руки (длина рук >40 % высоты фигуры). Активность, уверенность в себе, способность достигать целей.
- Короткие, слабые руки (длина рук <20 % высоты фигуры). Пассивность, зависимость, неуверенность в своих силах.
- Спрятанные за спиной руки (руки не видны спереди). Чувство вины, стеснительность, нежелание действовать.
- Руки, направленные на себя (руки согнуты к туловищу). Аутоагрессия, самокритика.

Ноги:
- Длинные, сильные ноги (длина ног >50 % высоты фигуры). Уверенность в себе, стремление к независимости, активная жизненная позиция.
- Короткие, слабые ноги (длина ног <35 % высоты фигуры). Неуверенность, зависимость от других, потребность в опоре.

Одежда:
- Подробная, тщательно прорисованная одежда (узоров ≥5 на 10 см²). Стремление произвести впечатление, потребность во внимании, соответствие социальным нормам.
- Схематичная одежда (узоров нет). Скромность, нежелание привлекать внимание, безразличие к социальным нормам.
- Неопрятная одежда (линии неровные, «рваные»). Пренебрежение к себе, низкая самооценка, бунтарство.

Ответ для рисунка 3 даётся в формате:
Рисунок 3 (Автопортрет).
1. Размер фигуры: <критерий>
2. Расположение на листе: <критерий>
3. Сила нажима: <критерий>
4. Характер линий: <критерий>
5. Общая композиция: <критерий>

Детали фигуры:
1. Голова: <критерий>
2. Глаза: <критерий>
3. Рот: <критерий>
4. Уши: <критерий>
5. Плечи: <критерий>
6. Шея: <критерий>
7. Талия: <критерий>
8. Руки: <критерий>
9. Ноги: <критерий>
10. Одежда: <критерий>

""".strip()


async def generate_pdf_report(task: dict, final_analysis: str):
    pdf_filename = f"report_{task['task_id']}.pdf"
    doc = SimpleDocTemplate(
        pdf_filename,
        pagesize=letter,
        leftMargin=40, rightMargin=40, topMargin=40, bottomMargin=40
    )

    story = []
    # Заголовок
    story.append(Paragraph("**Психологический отчёт**", styles['MarkdownHeading2']))
    story.append(Paragraph(f"ID задачи: {task['task_id']}", styles['MarkdownBody']))
    story.append(Spacer(1, 12))

    # Фото-результаты & баллы (простыми параграфами)
    story.append(Paragraph("**Результаты анализа рисунков:**", styles['MarkdownHeading2']))
    for k, v in task.get('photo_results', {}).items():
        story.append(Paragraph(f"- **{k}**: {v}", styles['MarkdownBody']))

    scores = task.get('survey_results', {}).get('scores', {})
    if scores:
        story.append(Spacer(1, 12))
        story.append(Paragraph("**Баллы опросника:**", styles['MarkdownHeading2']))
        for sec, sc in scores.items():
            story.append(Paragraph(f"- **{sec}**: {sc}", styles['MarkdownBody']))

    # Основной Markdown → HTML → Paragraph
    story.append(PageBreak())
    html = markdown2.markdown(final_analysis, extras=["fenced-code-blocks"])
    # Разбиваем на теги
    
    soup = BeautifulSoup(html, 'html.parser')
    for el in soup.children:
        text = str(el)
        if el.name in ('h1','h2','h3'):
            style = styles['MarkdownHeading2']
        else:
            style = styles['MarkdownBody']
        story.append(Paragraph(text, style))

    doc.build(story)
    return pdf_filename


async def request_openai(system: str, user: str, model: str = 'gpt-4.1-2025-04-14', temp: Optional[float] = None):
    client = AsyncOpenAI()
    messages = [{'role': 'system', 'content': system}, {'role': 'user', 'content': user}]
    try:
        response = await client.chat.completions.create(model=model, messages=messages, temperature=temp)
        return response.choices[0].message.content
    except Exception as e:
        raise HTTPException(status_code=500, detail=f'Ошибка при запросе в OpenAI: {e}')

async def process_image(task_id: str, key: str, mime: str, b64: str, prompt: str):
    client = AsyncOpenAI()
    content = [
        {"type": "text", "text": prompt},
        {"type": "image_url", "image_url": {"url": f"data:{mime};base64,{b64}"}}
    ]
    try:
        resp = await client.chat.completions.create(
            model="gpt-4.1-2025-04-14",
            messages=[{'role': 'user', 'content': content}]
        )
        result = resp.choices[0].message.content
        task_str = redis_client.get(task_id)
        if task_str:
            task = json.loads(task_str)
            task["photo_results"][key] = result
            if all(isinstance(v, str) for v in task['photo_results'].values()):
                task['photo_status'] = 'done'
            redis_client.set(task_id, json.dumps(task))
        else:
            raise HTTPException(status_code=404, detail="Task not found")
    except Exception as e:
        task_str = redis_client.get(task_id)
        if task_str:
            task = json.loads(task_str)
            task['photo_results'][key] = {'error': str(e)}
            task['photo_status'] = 'error'
            redis_client.set(task_id, json.dumps(task))
        else:
            raise HTTPException(status_code=404, detail="Task not found")

async def process_survey(task_id: str, survey: SurveyData):
    survey_dict = survey.dict()
    try:
        scores = calculate_survey_scores(survey_dict)
    except Exception as e:
        raise HTTPException(status_code=400, detail=f"Ошибка при расчете баллов: {str(e)}")
    
    open_questions = {
        'developmentFeatures': survey_dict.get('developmentFeatures', '') or '',
        'strengths': survey_dict.get('strengths', '') or '',
        'attentionAreas': survey_dict.get('attentionAreas', '') or '',
        'specialists': survey_dict.get('specialists', '') or ''
    }
    
    system_prompt = "Вы — опытный психолог, анализирующий ответы родителей на открытые вопросы анкеты о развитии ребенка."
    user_prompt = f"""
    Проанализируйте следующие ответы на открытые вопросы анкеты:
    1. Особенности развития или поведения ребенка: {open_questions['developmentFeatures']}
    2. Сильные стороны и таланты ребенка: {open_questions['strengths']}
    3. Области, требующие особого внимания: {open_questions['attentionAreas']}
    4. Обращение к специалистам: {open_questions['specialists']}
    Дайте краткий анализ и рекомендации на основе этих данных.
    """
    
    try:
        analysis = await request_openai(system=system_prompt, user=user_prompt, model='gpt-4.1-mini', temp=0.1)
    except Exception as e:
        analysis = f"Ошибка при анализе открытых вопросов: {str(e)}"
    
    task_str = redis_client.get(task_id)
    if task_str:
        task = json.loads(task_str)
        task["survey_results"] = {"scores": scores, "analysis": analysis}
        task["survey_status"] = "done"
        redis_client.set(task_id, json.dumps(task))
    else:
        raise HTTPException(status_code=404, detail="Task not found")

def calculate_survey_scores(survey_data: Dict[str, str]) -> Dict[str, int]:
    sections = {
        'section_1': [f'q1_{i}' for i in range(1, 11)],
        'section_2': [f'q2_{i}' for i in range(1, 11)],
        'section_3': [f'q3_{i}' for i in range(1, 11)],
        'section_4': [f'q4_{i}' for i in range(1, 11)]
    }
    scores = {'section_1': 0, 'section_2': 0, 'section_3': 0, 'section_4': 0}
    for section, questions in sections.items():
        for question in questions:
            scores[section] += int(survey_data[question])
    scores['total'] = sum(scores[section] for section in sections.keys())
    return scores

@app.post("/upload")
async def upload_images(files: List[UploadFile] = File(...)):
    if len(files) != 3:
        raise HTTPException(status_code=400, detail="Нужно 3 файла")
    encoded = []
    for f in files:
        if not f.content_type.startswith('image/'):
            raise HTTPException(status_code=400, detail="Только изображения")
        data = await f.read()
        b64 = base64.b64encode(data).decode()
        encoded.append((f.content_type, b64))
    task_id = str(uuid.uuid4())
    task = {
        'task_id': task_id,
        'photo_status': 'processing',
        'photo_results': {'image1': None, 'image2': None, 'image3': None},
        'survey_status': 'pending',
        'survey_results': None
    }
    redis_client.set(task_id, json.dumps(task))
    prompts = [PROMPT_HOUSE_TREE_PERSON, PROMPT_ANIMAL, PROMPT_SELF_PORTRAIT]
    for idx, (mime, b64) in enumerate(encoded, start=1):
        key = f'image{idx}'
        asyncio.create_task(process_image(task_id, key, mime, b64, prompts[idx-1]))
    return JSONResponse(status_code=202, content={'task_id': task_id, 'status': 'фотографии в обработке'})

@app.post("/submit-survey")
async def submit_survey(request: AnalysisRequest):
    task_id = request.task_id
    if not redis_client.exists(task_id):
        raise HTTPException(status_code=404, detail="Task not found")
    task_str = redis_client.get(task_id)
    task = json.loads(task_str)
    if task['survey_status'] != 'pending':
        raise HTTPException(status_code=400, detail="Опросник уже отправлен или обработан")
    asyncio.create_task(process_survey(task_id, request.survey))
    return {"message": "Опросник принят", "task_id": task_id}



@app.get("/report/{task_id}")
async def get_report(task_id: str):
    if not redis_client.exists(task_id):
        raise HTTPException(status_code=404, detail="Task not found")
    task_str = redis_client.get(task_id)
    task = json.loads(task_str)
    if task['photo_status'] == 'done' and task['survey_status'] == 'done':
        
        final_system = f'''  
        Ты — опытный психолог, анализирующий результаты анализа фотографий и психологического отчёта о ребёнке.
        
        
Тебе будет дана информация о ребёнке, а именно:
психологический отчёт о ребёнке и результаты анализа фотографий. На основе ИХ

В ответе должен быть отчет по примеру        
пример того как нужно сделать отчет:        
**Психологический отчёт о ребёнке 8 лет**
## 📚 Краткая сводка

* **Имя ребёнка:** \[Имя]
* **Главное качество (рисунок "Дом")**: Чувство защищённости и потребность в стабильности.
* **Основная черта (рисунок "Животное")**: Воображение и наблюдательность.
* **Самооценка (автопортрет)**: Склонность к самокритике, стремление к одобрению взрослых.

---

## 🔍 Развёрнутые разделы

### 1. Дом-Дерево-Человек: ключевые наблюдения

| Элемент | Особенности рисунка                 | Психологический вывод                   |
| ------- | ----------------------------------- | --------------------------------------- |
| Дом     | Уютный, с окнами, дымом, забором    | Потребность в безопасности, семья важна |
| Дерево  | С корнями, пышная крона             | Устойчивость, рост, жизненная энергия   |
| Человек | Маленький, руки прижаты, без эмоций | Скромность, неуверенность, сдержанность |

**Общий вывод:** Ребёнок чувствует себя в семье защищённо, но может быть сдержан в выражении эмоций и чувствует неуверенность в социальной среде.

---

### 2. Животное: детали и фантазия

* **Выбор животного:** Фантастическое или символическое существо (например, лиса с крыльями)
* **Акценты в рисунке:** Большие глаза, уши — важность наблюдения, осторожность
* **Позы и выражение:** Мирное выражение, сидячая поза — доброжелательность

**Вывод:** У ребёнка хорошо развито воображение, он склонен к рефлексии и наблюдательности. Может сдерживать активные эмоции, предпочитая анализ.

---

### 3. Автопортрет: особенности самовосприятия

* **Размер фигуры:** Маленький — возможна заниженная самооценка
* **Выражение лица:** Нейтральное или отсутствует — сдержанность
* **Дополнительные детали:** Нет фона или вторичных образов — неуверенность в социуме

**Вывод:** Ребёнок ориентирован на внешнюю оценку, нуждается в поддержке, особенно эмоциональной и словесной.

---

### 4. Опросник: суммарные баллы и профиль

| Шкала                      | Баллы (из 25) |
| -------------------------- | ------------- |
| Эмоциональная устойчивость | 14            |
| Социальная адаптация       | 16            |
| Саморегуляция              | 12            |
| Коммуникативность          | 18            |
| Самооценка                 | 11            |

#### Визуальный профиль (пример):

```
  ■ Эмоц. устойчивость  [■■■■■□□□□□□□]
  ■ Соц. адаптация      [■■■■■■■■□□□□]
  ■ Саморегуляция       [■■■■□□□□□□□]
  ■ Коммуникативность   [■■■■■■■■■□□□]
  ■ Самооценка          [■■■□□□□□□□□]
```

---

## 📖 Рекомендации для родителей

* Чаще хвалите ребёнка за конкретные действия, а не только за результат
* Помогайте называть чувства: "Ты расстроился, потому что..."
* Поддерживайте инициативу, даже если ребёнок ошибается
* Создавайте спокойную и предсказуемую атмосферу дома
* Поощряйте фантазию — сказки, рисунки, игры по ролям

---

*Отчёт составлен на основе проектных методик и наблюдений. Является ориентиром для мягкой поддержки ребёнка в развитии.*
        
        '''
        final_user = f'''    
Твоя задача как опытного психолога, проанализировать результаты анализа фотографий и психологического отчёта о ребёнке.
        
        
информация о ребёнке:
психологический отчёт о ребёнке: {task["survey_results"]}
результаты анализа фотографий: {task["photo_results"]}

В ответе обязательно сделай отчет по примеру        
пример того как нужно сделать отчет:  

      
**Психологический отчёт о ребёнке 8 лет**
## 📚 Краткая сводка

* **Имя ребёнка:** \[Имя]
* **Главное качество (рисунок "Дом")**: Чувство защищённости и потребность в стабильности.
* **Основная черта (рисунок "Животное")**: Воображение и наблюдательность.
* **Самооценка (автопортрет)**: Склонность к самокритике, стремление к одобрению взрослых.

---

## 🔍 Развёрнутые разделы

### 1. Дом-Дерево-Человек: ключевые наблюдения

| Элемент | Особенности рисунка                 | Психологический вывод                   |
| ------- | ----------------------------------- | --------------------------------------- |
| Дом     | Уютный, с окнами, дымом, забором    | Потребность в безопасности, семья важна |
| Дерево  | С корнями, пышная крона             | Устойчивость, рост, жизненная энергия   |
| Человек | Маленький, руки прижаты, без эмоций | Скромность, неуверенность, сдержанность |

**Общий вывод:** Ребёнок чувствует себя в семье защищённо, но может быть сдержан в выражении эмоций и чувствует неуверенность в социальной среде.

---

### 2. Животное: детали и фантазия

* **Выбор животного:** Фантастическое или символическое существо (например, лиса с крыльями)
* **Акценты в рисунке:** Большие глаза, уши — важность наблюдения, осторожность
* **Позы и выражение:** Мирное выражение, сидячая поза — доброжелательность

**Вывод:** У ребёнка хорошо развито воображение, он склонен к рефлексии и наблюдательности. Может сдерживать активные эмоции, предпочитая анализ.

---

### 3. Автопортрет: особенности самовосприятия

* **Размер фигуры:** Маленький — возможна заниженная самооценка
* **Выражение лица:** Нейтральное или отсутствует — сдержанность
* **Дополнительные детали:** Нет фона или вторичных образов — неуверенность в социуме

**Вывод:** Ребёнок ориентирован на внешнюю оценку, нуждается в поддержке, особенно эмоциональной и словесной.

---

### 4. Опросник: суммарные баллы и профиль

| Шкала                      | Баллы (из 25) |
| -------------------------- | ------------- |
| Эмоциональная устойчивость | 14            |
| Социальная адаптация       | 16            |
| Саморегуляция              | 12            |
| Коммуникативность          | 18            |
| Самооценка                 | 11            |

#### Визуальный профиль (пример):

```
  ■ Эмоц. устойчивость  [■■■■■□□□□□□□]
  ■ Соц. адаптация      [■■■■■■■■□□□□]
  ■ Саморегуляция       [■■■■□□□□□□□]
  ■ Коммуникативность   [■■■■■■■■■□□□]
  ■ Самооценка          [■■■□□□□□□□□]
```

---

## 📖 Рекомендации для родителей

* Чаще хвалите ребёнка за конкретные действия, а не только за результат
* Помогайте называть чувства: "Ты расстроился, потому что..."
* Поддерживайте инициативу, даже если ребёнок ошибается
* Создавайте спокойную и предсказуемую атмосферу дома
* Поощряйте фантазию — сказки, рисунки, игры по ролям

---

*Отчёт составлен на основе проектных методик и наблюдений. Является ориентиром для мягкой поддержки ребёнка в развитии.*
               
        
        '''
        
       
        try:
            final_analysis = await request_openai(system=final_system, user=final_user, model='gpt-4.1-2025-04-14', temp=0)
            print('--------------------------------------------')
            print(final_analysis)
            pdf_filename = await generate_pdf_report(task, final_analysis)
            if not os.path.exists(pdf_filename):
                raise HTTPException(status_code=500, detail="PDF файл не был создан")
            return FileResponse(pdf_filename, media_type='application/pdf', filename=f"report_{task_id}.pdf")
        except Exception as e:
            raise HTTPException(status_code=500, detail=f"Ошибка при генерации отчета: {str(e)}")
    elif task['photo_status'] == 'error' or task['survey_status'] == 'error':
        return {"status": "error", "errors": task.get('photo_results', {}) | task.get('survey_results', {})}
    else:
        return {"status": "в обработке"}
    
    